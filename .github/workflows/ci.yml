name: CI
on: [push, pull_request]

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install shellcheck
        run: sudo apt-get update && sudo apt-get install -y shellcheck

      - name: Shellcheck setup scripts
        run: shellcheck setup-scripts/*.sh

      - name: Smoke test workspace setup
        run: |
          echo "üß™ Testing workspace setup script..."
          bash setup-scripts/setup-workspace.sh || true

      - name: Smoke test project setup
        run: |
          echo "üß™ Testing project setup script..."
          bash setup-scripts/setup-project.sh || true

      - name: Verify example structures
        run: |
          echo "üß™ Verifying example project structures..."
          for project in webapp-project api-project cli-project; do
            echo "Checking examples/$project/..."
            [ -d "examples/$project/ai-dev" ] || { echo "‚ùå Missing ai-dev in $project"; exit 1; }
            [ -L "examples/$project/ai-dev/templates" ] || { echo "‚ùå Missing templates link in $project"; exit 1; }
            [ -f "examples/$project/ai-dev/README.md" ] || { echo "‚ùå Missing README in $project"; exit 1; }
            echo "‚úÖ $project structure verified"
          done

      - name: Verify documentation
        run: |
          echo "üß™ Verifying documentation completeness..."
          required_docs=(
            "METHODOLOGY.md"
            "HUMAN_AI_COLLABORATION.md"
            "docs/WORKSPACE_SETUP.md"
            "docs/PROJECT_PIPELINE.md"
            "docs/BEST_PRACTICES.md"
          )

          for doc in "${required_docs[@]}"; do
            [ -f "$doc" ] || { echo "‚ùå Missing required doc: $doc"; exit 1; }
            echo "‚úÖ $doc exists"
          done

      - name: Verify template links
        run: |
          echo "üß™ Verifying template links..."
          [ -d "professional-templates" ] || { echo "‚ùå Missing professional-templates directory"; exit 1; }

          for project in webapp-project api-project cli-project; do
            target=$(readlink "examples/$project/ai-dev/templates")
            expected="../../professional-templates"
            [ "$target" = "$expected" ] || { echo "‚ùå Wrong template link in $project: $target != $expected"; exit 1; }
            echo "‚úÖ $project templates linked correctly"
          done