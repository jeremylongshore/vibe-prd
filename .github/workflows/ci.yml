name: CI
on:
  push:
    branches: [main]
    tags: ['v*']
  pull_request:
permissions:
  contents: write
  packages: write
  id-token: write

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Install shellcheck (if scripts exist)
        run: sudo apt-get update && sudo apt-get install -y shellcheck

      - name: Shellcheck scripts
        if: hashFiles('**/*.sh') != ''
        run: shellcheck -S warning $(git ls-files '*.sh')

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image (no push on PRs)
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          push: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}
          tags: |
            ghcr.io/${{ github.repository }}:${{ github.sha }}
            ${{ startsWith(github.ref, 'refs/tags/') && github.ref_name || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          load: true

      - name: Test container commands
        run: |
          echo "üß™ Testing container commands..."
          docker run --rm ghcr.io/${{ github.repository }}:${{ github.sha }} make help
          docker run --rm ghcr.io/${{ github.repository }}:${{ github.sha }} make status

      - name: Test document creation end-to-end
        run: |
          echo "üß™ Testing document creation..."
          mkdir -p test-workspace
          docker run --rm -v "$PWD/test-workspace":/workspace -w /workspace \
            ghcr.io/${{ github.repository }}:${{ github.sha }} \
            bash -c "WORKSPACE=/workspace make -C /app create T=create-prd.md N=test-prd.md"
          [ -f "test-workspace/test-prd.md" ] || { echo "‚ùå Document not created"; exit 1; }
          echo "‚úÖ Document creation works"
          echo "üìÑ Created file contents:"
          head -5 test-workspace/test-prd.md

      - name: Verify core files exist
        run: |
          echo "üß™ Verifying core files..."
          required_files=(
            "Dockerfile"
            "ai-dev"
            "Makefile"
            "professional-templates"
            "README.md"
            "CHANGELOG.md"
          )
          for file in "${required_files[@]}"; do
            [ -e "$file" ] || { echo "‚ùå Missing required file: $file"; exit 1; }
            echo "‚úÖ $file exists"
          done